// Auto generated by utensor-cli

#include "uTensor/ops/NnOps.hpp"
#include "uTensor/ops/MathOps.hpp"
#include "trained_weight.hpp"
#include "uTensor/core/tensor.hpp"
#include "trained.hpp"
#include "uTensor/ops/MatrixOps.hpp"
#include "uTensor/core/context.hpp"


void get_trained_ctx(Context& ctx, Tensor* input_0) {

{ // add tensor for placeholders
    ctx.add(input_0, "x_input:0", 1);
}
{    
    ctx.add(new BinaryTensor<float>({33,20}, inline_dense_1_kernel_0), 
            "dense_1/kernel:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "dense_1/MatMul:0", 1);
    ctx.push(new MatMulOp<float, float, float>(),
             { "x_input:0",  "dense_1/kernel:0" },
             { "dense_1/MatMul:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({20}, inline_dense_1_bias_0), 
            "dense_1/bias:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "dense_1/BiasAdd:0", 1);
    ctx.push(new AddOp<float, float>(),
             { "dense_1/MatMul:0", "dense_1/bias:0" }, 
             { "dense_1/BiasAdd:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>(), "dense_1/Relu:0", 1);
    ctx.push(new ReluOp<float, float>(),
             { "dense_1/BiasAdd:0" },
             { "dense_1/Relu:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({20,10}, inline_dense_2_kernel_0), 
            "dense_2/kernel:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "dense_2/MatMul:0", 1);
    ctx.push(new MatMulOp<float, float, float>(),
             { "dense_1/Relu:0",  "dense_2/kernel:0" },
             { "dense_2/MatMul:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({10}, inline_dense_2_bias_0), 
            "dense_2/bias:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "dense_2/BiasAdd:0", 1);
    ctx.push(new AddOp<float, float>(),
             { "dense_2/MatMul:0", "dense_2/bias:0" }, 
             { "dense_2/BiasAdd:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>(), "dense_2/Relu:0", 1);
    ctx.push(new ReluOp<float, float>(),
             { "dense_2/BiasAdd:0" },
             { "dense_2/Relu:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({10,4}, inline_y_pred_kernel_0), 
            "y_pred/kernel:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "y_pred/MatMul:0", 1);
    ctx.push(new MatMulOp<float, float, float>(),
             { "dense_2/Relu:0",  "y_pred/kernel:0" },
             { "y_pred/MatMul:0" });
    ctx.eval();
}
{    
    ctx.add(new BinaryTensor<float>({4}, inline_y_pred_bias_0), 
            "y_pred/bias:0", 
            1);
}
{
    ctx.add(new RamTensor<float>(), "y_pred/BiasAdd:0", 1);
    ctx.push(new AddOp<float, float>(),
             { "y_pred/MatMul:0", "y_pred/bias:0" }, 
             { "y_pred/BiasAdd:0" });
    ctx.eval();
}
{
    ctx.add(new RamTensor<float>(), "y_pred/Softmax:0");
    ctx.push(new SoftmaxOp<float,float>(),
             { "y_pred/BiasAdd:0" },
             { "y_pred/Softmax:0" });
}
}